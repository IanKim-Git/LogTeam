<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="prog">
	<!-- ### 유저용 SQL문 ### -->
	<resultMap type="puBean" id="rmPuBean">
		<result column="UEMAIL" property="uemail" />
		<result column="UNAME" property="uname" />
		<result column="UPW" property="upw" />
		<result column="UPHONE" property="uphone" />
		<result column="UPROCNT" property="uprocnt" />
	</resultMap>
	
	<!-- 로그인 -->
	<select id="IdPwCheck" parameterType="puBean" resultMap="rmPuBean">
		select uemail, uname, upw, uphone, uprocnt from proguser where uemail=#{uemail} and upw=#{upw}
	</select>
	
	<!-- 회원가입 : 전화번호가 있는 경우 -->
	<insert id="signIn" parameterType="puBean">
		insert into proguser(uemail, uname, upw, uphone) values(#{uemail} , #{uname} , #{upw}, #{uphone})
	</insert>
	
	<!-- 이메일 중복 체크 -->	
	<select id="IdCheck" parameterType="java.lang.String" resultType="String" >
		select uemail from proguser where uemail=#{uemail}
	</select>
	
	<!-- 회원 정보 변경 -->
	<update id="update" parameterType="puBean">
		update proguser set upw=#{upw}, uname=#{uname}, uphone=#{uphone} where uemail=#{uemail}		
	</update>
	
	<!-- 회원 정보 확인 -->
	<select id="userInfo" parameterType="java.lang.String" resultMap="rmPuBean">
		select uemail, uname, upw, uphone, uprocnt from proguser where uemail=#{uemail}
	</select>
	
	<!-- 모든 회원 정보 확인 -->
	<select id="allUsers" resultMap="rmPuBean">
		select uemail, uname, upw, uphone, uprocnt from proguser
	</select>

	
	<!-- ### 프로젝트용 쿼리문 ### -->
	<!-- 프로젝트 생성 -->
	<insert id="newProject" parameterType="projectBean">
		insert into Project values(seq_p.nextval, #{pname}, #{ppw}, #{pmento}, #{pstart}, #{pend}, #{pleader}, 0)
	</insert>
	
	<!-- 프로젝트 생성 후 유저와 프로젝트간 관계 설정 -->
	<insert id="newParticipation" parameterType="UPBean">
		insert into UserProject values(#{up_uemail},#{up_pnum},0)
	</insert>
	
	<!-- 해당 사용자의 모든 프로젝트 출력 -->
	<select id="SelectAllProject" parameterType="String" resultType="projectBean">
		select pnum, pname, pmento, pstart, pend, pleader from project, UserProject where UP_uemail=#{uemail} and UP_Pnum=Pnum  
	</select>
	
	<!-- 프로젝트 번호 확인 -->
	<select id="getProjectNumber" resultType="int">
		select pnum from project where pname=#{pname} and ppw=#{ppw} and pstart=#{pstart} and pend=#{pend} and pleader=#{pleader}
	</select>
	
	
	<!--  ### 로그용 SQL문 ###  -->
	<!-- 해당 프로젝트의 모든 로그 출력 -->
	<select id="allLogs" parameterType="int" resultType="logBean" >
		select lnum, l_pnum, l_uemail, ldata, ltext, lpublic, ladmission from log where l_pnum=#{l_pnum}
	</select>
	
	<!-- 해당 로그 삭제 -->
	<delete id="logDelete" parameterType="int">
		delete log where lnum = #{lnum}
	</delete>
	
	<!-- 로그 작성 : only text -->
	<!-- insert into log values(seq_l.nextval,21,'t@t.t',sysdate,'test text',null,null,0,0); -->
	<!-- select lnum, l_pnum, l_uemail, ldata, ltext, lpublic, ladmission from log; -->
	<!-- 
	"LNUM" NUMBER(4,0) NOT NULL ENABLE, 
	"L_PNUM" NUMBER(4,0) NOT NULL ENABLE, 
	"L_UEMAIL" VARCHAR2(30) NOT NULL ENABLE, 
	"LDATA" DATE NOT NULL ENABLE, 
	"LTEXT" VARCHAR2(1000), 
	"LPHOTO" BLOB, 
	"LFILE" BLOB, 
	"LPUBLIC" NUMBER(1,0) NOT NULL ENABLE, 
	"LADMISSION" NUMBER(1,0) NOT NULL ENABLE, 
	 -->
	<insert id="logWrite" parameterType="logBean">
		insert into log(lnum, l_pnum, l_uemail, ldata, ltext, lpublic, ladmission)
		values(seq_l.nextval , #{l_pnum}, #{l_uemail}, sysdate, #{ltext}, 0, 0)
	</insert>
</mapper>







